using UnityEngine;namespace CrazyMinnow.SALSA.OneClicks{	public class OneClickDAZGen81 : OneClickBase	{		/// <summary>		/// RELEASE NOTES:		///		2.5.3-BETA : Initial release.		/// ==========================================================================		/// PURPOSE: This script provides simple, simulated lip-sync input to the		///		Salsa component from text/string values. For the latest information		///		visit crazyminnowstudio.com.		/// ==========================================================================		/// DISCLAIMER: While every attempt has been made to ensure the safe content		///		and operation of these files, they are provided as-is, without		///		warranty or guarantee of any kind. By downloading and using these		///		files you are accepting any and all risks associated and release		///		Crazy Minnow Studio, LLC of any and all liability.		/// ==========================================================================		/// </summary>		public static void Setup(GameObject gameObject, AudioClip clip)		{			////////////////////////////////////////////////////////////////////////////////////////////////////////////			//	SETUP Requirements:			//		use NewExpression("expression name") to start a new viseme/emote expression.			//		use AddShapeComponent to add blendshape configurations, passing:			//			- string array of shape names to look for.			//			  : string array can be a single element.			//			  : string array can be a single regex search string.			//			    note: useRegex option must be set true.			//			- optional string name prefix for the component.			//			- optional blend amount (default = 1.0f).			//			- optional regex search option (default = false).			Init();			#region SALSA-Configuration			NewConfiguration(OneClickConfiguration.ConfigType.Salsa);			{				////////////////////////////////////////////////////////				// SMR regex searches (enable/disable/add as required).				AddSmrSearch("^.*male\\.shape$");				////////////////////////////////////////////////////////				// Adjust SALSA settings to taste...				// - data analysis settings				autoAdjustAnalysis = true;				autoAdjustMicrophone = false;				audioUpdateDelay = 0.09282f;				// - advanced dynamics settings				loCutoff = 0.015f;				hiCutoff = 0.87f;				useAdvDyn = true;				advDynPrimaryBias = 0.5f;				useAdvDynJitter = true;				advDynJitterAmount = 0.1f;				advDynJitterProb = 0.25f;				advDynSecondaryMix = 0f;				emphasizerTrigger = 0f;				////////////////////////////////////////////////////////				// Viseme setup...				NewExpression("w");				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.056f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPucker_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthPucker_div2", 0.979f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFunnel_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFunnel_div2", 0.23f, true);				NewExpression("f");				AddShapeComponent(new []{"^.*__facs_jnt_JawRecess"}, 0.08f, 0f, 0.08f, "facs_jnt_JawRecess", 0.2f, true);				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.25f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpRight_div2", 0.2f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpLeft_div2", 0.2f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthShrugLower_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthShrugLower_div2", 0.8f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollUpper_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollUpper_div2", 0.076f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollLower_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollLower_div2", 0.75f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPucker_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthPucker_div2", 0.35f, true);				NewExpression("t");				AddShapeComponent(new []{"^.*__facs_jnt_TongueUp"}, 0.08f, 0f, 0.08f, "facs_jnt_TongueUp", 0.116f, true);				AddShapeComponent(new []{"^.*__facs_jnt_TongueTipBend"}, 0.08f, 0f, 0.08f, "facs_jnt_TongueTipBend", 0.192f, true);				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.071f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_MouthSmile"}, 0.08f, 0f, 0.08f, "facs_ctrl_MouthSmile", 0.199f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpRight_div2", 0.133f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpLeft_div2", 0.135f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRight_div2", 0.227f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPucker_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthPucker_div2", 0.126f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthLowerDownRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthLowerDownRight_div2", 0.437f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthLowerDownLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthLowerDownLeft_div2", 0.437f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthLeft_div2", 0.226f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthDimpleRight_div2", 0.615f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthDimpleLeft_div2", 0.616f, true);				NewExpression("th");				AddShapeComponent(new []{"^.*__facs_jnt_TongueUp"}, 0.08f, 0f, 0.08f, "facs_jnt_TongueUp", 0.329f, true);				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.212f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_MouthSmile"}, 0.08f, 0f, 0.08f, "facs_ctrl_MouthSmile", 0.083f, true);				AddShapeComponent(new []{"^.*__facs_bs_TongueTipWide"}, 0.08f, 0f, 0.08f, "facs_bs_TongueTipWide", 0.596f, true);				AddShapeComponent(new []{"^.*__facs_bs_TongueOut"}, 0.08f, 0f, 0.08f, "facs_bs_TongueOut", 0.5233f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpRight_div2", 0.163f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthUpperUpLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthUpperUpLeft_div2", 0.163f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthShrugUpper_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthShrugUpper_div2", 0.269f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthShrugLower_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthShrugLower_div2", 0.379f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollUpper_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollUpper_div2", 0.024f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollLower_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollLower_div2", 0.401f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFunnel_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFunnel_div2", 0.236f, true);				NewExpression("ow");				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.393f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollUpper_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollUpper_div2", 0.3f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthRollLower_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthRollLower_div2", 0.38f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFunnel_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFunnel_div2", 0.817f, true);				NewExpression("ee");				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.101f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_MouthSmile"}, 0.08f, 0f, 0.08f, "facs_ctrl_MouthSmile", 0.738f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthStretchRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthStretchRight_div2", 0.457f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthStretchLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthStretchLeft_div2", 0.457f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPressRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthPressRight_div2", 0.34f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPressLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthPressLeft_div2", 0.34f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthLowerDownRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthLowerDownRight_div2", 0.802f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthLowerDownLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthLowerDownLeft_div2", 0.805f, true);				NewExpression("oo");				AddShapeComponent(new []{"^.*__facs_jnt_JawOpen"}, 0.08f, 0f, 0.08f, "facs_jnt_JawOpen", 0.625f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_MouthDimple"}, 0.08f, 0f, 0.08f, "facs_ctrl_MouthDimple", 0.399f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_MouthSmile"}, 0.08f, 0f, 0.08f, "facs_ctrl_MouthSmile", 0.804f, true);				AddShapeComponent(new []{"^.*__facs_bs_TongueIn"}, 0.08f, 0f, 0.08f, "facs_bs_TongueIn", 0.356f, true);				AddShapeComponent(new []{"^.*__facs_bs_NasalFlare_div2"}, 0.08f, 0f, 0.08f, "facs_bs_NasalFlare_div2", 0.295f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFunnel_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFunnel_div2", 0.807f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFrownRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFrownRight_div2", 0.156f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthFrownLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthFrownLeft_div2", 0.155f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleRight_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthDimpleRight_div2", 0.209f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleLeft_div2"}, 0.08f, 0f, 0.08f, "facs_bs_MouthDimpleLeft_div2", 0.213f, true);			}			#endregion // SALSA-configuration			#region EmoteR-Configuration			NewConfiguration(OneClickConfiguration.ConfigType.Emoter);			{				////////////////////////////////////////////////////////				// SMR regex searches (enable/disable/add as required).				AddSmrSearch("^.*tear\\.shape$");				AddSmrSearch("^.*male\\.shape$");				AddSmrSearch("^.*eyelashes\\.shape$");				useRandomEmotes = true;				isChancePerEmote = true;				numRandomEmotesPerCycle = 1;				randomEmoteMinTimer = 1f;				randomEmoteMaxTimer = 2f;				randomChance = 0.5f;				useRandomFrac = false;				randomFracBias = 0.5f;				useRandomHoldDuration = false;				randomHoldDurationMin = 0.1f;				randomHoldDurationMax = 0.5f;				////////////////////////////////////////////////////////				// Emote setup...				NewExpression("soften");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_ctrl_SmileFullFace"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_SmileFullFace", 0.249f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpRight_div2", 0.247f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpLeft_div2", 0.306f, true);				NewExpression("browsUp");				AddEmoteFlags(false, true, false, 1f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowOuterUpRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowOuterUpRight_div2", 0.569f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowOuterUpLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowOuterUpLeft_div2", 0.473f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpRight_div2", 0.777f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpLeft_div2", 0.623f, true);				NewExpression("browUp");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_bs_BrowOuterUpRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowOuterUpRight_div2", 0.065f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowOuterUpLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowOuterUpLeft_div2", 0.125f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpRight_div2", 0.308f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowInnerUpLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowInnerUpLeft_div2", 0.923f, true);				NewExpression("puff");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_ctrl_NoseSneer"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_NoseSneer", 0.074f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_CheekSquint"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_CheekSquint", 0.521f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_CheekPuff"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_CheekPuff", 0.256f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthPucker_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_MouthPucker_div2", 0.24f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_MouthDimpleRight_div2", 0.179f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_MouthDimpleLeft_div2", 0.165f, true);				NewExpression("scrunch");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_bs_NoseSneerRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_NoseSneerRight_div2", 0.279f, true);				AddShapeComponent(new []{"^.*__facs_bs_NoseSneerLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_NoseSneerLeft_div2", 0.238f, true);				AddShapeComponent(new []{"^.*__facs_bs_CheekSquintRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_CheekSquintRight_div2", 0.494f, true);				AddShapeComponent(new []{"^.*__facs_bs_CheekSquintLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_CheekSquintLeft_div2", 0.415f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowDownRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowDownRight_div2", 0.288f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowDownLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowDownLeft_div2", 0.244f, true);				NewExpression("squint");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_ctrl_EyeSquint"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_EyeSquint", 0.118f, true);				AddShapeComponent(new []{"^.*__facs_ctrl_CheekSquint"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_CheekSquint", 0.803f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_MouthDimpleRight_div2", 0.099f, true);				AddShapeComponent(new []{"^.*__facs_bs_MouthDimpleLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_MouthDimpleLeft_div2", 0.206f, true);				AddShapeComponent(new []{"^.*__facs_bs_EyeSquintRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_EyeSquintRight_div2", 0.075f, true);				AddShapeComponent(new []{"^.*__facs_bs_EyeSquintLeft_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_EyeSquintLeft_div2", 0.122f, true);				NewExpression("focus");				AddEmoteFlags(false, true, false, 1f);				AddShapeComponent(new []{"^.*__facs_ctrl_CheekSquint"}, 0.25f, 0.1f, 0.5f, "facs_ctrl_CheekSquint", 0.634f, true);				AddShapeComponent(new []{"^.*__facs_bs_CheekSquintRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_CheekSquintRight_div2", 0.115f, true);				AddShapeComponent(new []{"^.*__facs_bs_BrowDownRight_div2"}, 0.25f, 0.1f, 0.5f, "facs_bs_BrowDownRight_div2", 0.274f, true);			}			#endregion // EmoteR-configuration			DoOneClickiness(gameObject, clip);			if (selectedObject.GetComponent<SalsaAdvancedDynamicsSilenceAnalyzer>() == null)				selectedObject.AddComponent<SalsaAdvancedDynamicsSilenceAnalyzer>();			//Darrin's Tweaks			salsa.globalFrac = 1f;			salsa.useTimingsOverride = true;			salsa.globalDurON = 0.11f;			salsa.globalDurOffBalance = -0.09f;			salsa.globalNuanceBalance = -0.09f;			emoter.NumRandomEmphasizersPerCycle = 2;			EmoteExpression emote;			emote = emoter.FindEmote("soften");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("browsUp");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("browUp");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("puff");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("scrunch");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("squint");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("focus");			if (emote != null)				emote.frac = 1f;			var silenceAnalyzer = selectedObject.GetComponent<SalsaAdvancedDynamicsSilenceAnalyzer>();			if (silenceAnalyzer)			{				silenceAnalyzer.silenceThreshold = 0.9f;				silenceAnalyzer.timingStartPoint = 0.25f;				silenceAnalyzer.timingEndVariance = 0.8f;				silenceAnalyzer.silenceSampleWeight = 0.95f;				silenceAnalyzer.bufferSize = 512;			}		}	}}